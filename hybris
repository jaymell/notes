### ant version:
/apps/rt/hybris/hybris_5709_newlic/hybris/bin/platform/apache-ant-1.9.1/bin/ant

### svn code gets extracted to:
/apps/rt/relmgmt/jenkins01/jobs/workspace/eCommerce/eCOMM_CONT/RM_eCom_hybris_dev1_Build/sourceSVN

### various locations of 'racstorefront' folder:
/apps/rt/relmgmt/jenkins01/jobs/workspace/eCommerce/eCOMM_CONT/RM_eCom_hybris_dev1_Build/sourceSVN/hybris/bin/custom/rac/racstorefront
/apps/rt/hybris/hybris_5709_newlic/hybris/bin/custom/rac/racstorefront


# mysql jar:
# in production:
/opt/tomcat/lib/mysql-connector-java-5.1.34-bin.jar


#############################################################

## vars
hybrisZipFile="HYBRISCOMM5700P_9-70001174.zip"
hybrisLocation=/home/james/src/ecomm
svnLocation=/home/james/Documents/ecomm/trunk
configLocation=/home/james/Documents/ecomm



export JAVA_HOME=/usr/java/latest

# mysql:
cp ~/Documents/ecomm/mysql-connector-java-5.1.34-bin.jar ${hybrisLocation}/hybris/bin/platform/tomcat/lib/


## unzip hybris binaries:
unzip $configLocation/$hybrisZipFile -d $hybrisLocation/

## delete any previous custom code from custom code destination:
[[ -d ${hybrisLocation}/hybris/bin/custom ]] && rm -rf ${hybrisLocation}/hybris/bin/custom

## copy custom code from svn to dest:
rsync -avz --exclude .svn ${svnLocation}/hybris/bin/ ${hybrisLocation}/hybris/bin

## inject custom config files:
rsync -avz --exclude .svn ${svnLocation}/hybris/env/awsconfig/common/ ${hybrisLocation}/hybris/config/
# local.properties
cp ${configLocation}/local.properties ${hybrisLocation}/hybris/config/

## build
cd ${hybrisLocation}/hybris/bin/platform
source ./setantenv.sh

### production style build:
# ant customize
# ant clean
# ant production -Dproduction.legacy.mode=false -Dproduction.include.tomcat=false -Dtomcat.legacy.deployment=false

# local build:
ant customize
ant clean all
#### ant production -Dproduction.legacy.mode=false -Dproduction.include.tomcat=false -Dtomcat.legacy.deployment=false

./hybrisserver.sh 

# create mysql db:
echo "drop database hybris" | mysql -u root
echo "create database hybris" | mysql -u root
echo "create user 'hybris'@'localhost' identified by 'ohsh7Shi'" | mysql -u root
echo "create user 'hybris'@'%' identified by 'ohsh7Shi'" | mysql -u root
echo "set password for 'hybris'@'%' = password('ohsh7Shi')"  | mysql -u root
echo "grant all privileges on hybris.* to 'hybris'@'%'" | mysql -u root

######### log into console and initialize database ###########

rac.product.images.inputbucket
rac.batch.impex.content.basefolder

bin/custom/rac/racintegration/resources/racintegration-spring.xml
###
    <bean id="ImportS3LessStupid" class="com.rac.hybris.racintegration.s3.job.RACAmazonS3ImportLessStupid" autowire="byName">
        <property name="destDir" value=${rac.batch.impex.content.basefolder}/>
        <property name="bucket" value=${rac.product.images.inputbucket}/>
    </bean>
###

bin/custom/rac/racintegration/src/com/rac/hybris/racintegration/s3/job/RACAmazonS3Import.java
bin/custom/rac/racintegration/src/com/rac/hybris/racintegration/s3/job/RACAmazonS3ImportLessStupid.java

# run solr
docker run -d -p 8983:8983 solr

# run 
docker run -it -p 9001:9001 -v $(pwd):/hybris:Z tomcat-server bash

# using ref:
Caused by: org.springframework.beans.FatalBeanException: Context hybris Global Context Factory  couldn't  be created correctly due to, Error creating bean with name 'ImportS3LessStupid' defined in class path resource [racintegration-spring.xml]: Cannot resolve reference to bean '/home/james/Documents/ecomm/trunk/hybris/env/import' while setting bean property 'destDir'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named '/home/james/Documents/ecomm/trunk/hybris/env/import' is defined

# using value:
org.springframework.beans.FatalBeanException: Context hybris Global Context Factory  couldn't  be created correctly due to, Error creating bean with name 'ImportS3LessStupid' defined in class path resource [racintegration-spring.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'destDir' of bean class [com.rac.hybris.racintegration.s3.job.RACAmazonS3ImportLessStupid]: Bean property 'destDir' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?

bin/ext-accelerator/acceleratorservices/src/de/hybris/platform/acceleratorservices/dataexport/generic/impl/DefaultUploadDataJobPerformable.java

